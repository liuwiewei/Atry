<style lang="less">
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import Promise from 'promise-polyfill'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/classify',
      'pages/shopping_car',
      'pages/mine',
      'pages/brand',
      'pages/details',
      'pages/list'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#292929',
      navigationBarTitleText: '环球小镇',
      navigationBarTextStyle: 'white',
      enablePullDownRefresh: true,
      onReachBottomDistance: 200
    },
    tabBar: {
      position: 'bottom',
      color: '#6e6d6b',
      selectedColor: '#f9f027',
      backgroundColor: '#292929',
      list: [
        {
          pagePath: 'pages/index',
          text: '极速免税',
          iconPath: 'image/footer-icon-01.png',
          selectedIconPath: 'image/footer-icon-01-active.png'
        },
        {
          pagePath: 'pages/classify',
          text: '分类',
          iconPath: 'image/footer-icon-02.png',
          selectedIconPath: 'image/footer-icon-02-active.png'
        },
        {
          pagePath: 'pages/shopping_car',
          text: '购物车',
          iconPath: 'image/footer-icon-03.png',
          selectedIconPath: 'image/footer-icon-03-active.png'
        },
        {
          pagePath: 'pages/mine',
          text: '我的',
          iconPath: 'image/footer-icon-04.png',
          selectedIconPath: 'image/footer-icon-04-active.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
    this.login()
        .then(data => {
          console.log(data)
        })
  }

  onShow() {
  }

  customFunction() {
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  async getUserInfos () {
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    try {
      const result = await wepy.getUserInfo()
      this.globalData.userInfo = result.userInfo
      return result
    } catch (e) {
      throw new Error(`获取用户信息错误信息${e}`)
    }
  }
  async login () {
    return await wepy.login()
  }
}
</script>
